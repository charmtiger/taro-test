// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { h, Host } from "@stencil/core";
export class CheckboxGroup {
    constructor() {
        this.uniqueName = Date.now().toString(36);
        this.value = [];
    }
    function(e) {
        e.stopPropagation();
        if (e.target.tagName !== 'TARO-CHECKBOX')
            return;
        const childList = this.el.querySelectorAll('taro-checkbox-core');
        this.value = Array.from(childList)
            .filter(element => {
            var _a;
            const checkbox = element.querySelector(`input[name=${this.name || this.uniqueName}]`);
            return (_a = checkbox) === null || _a === void 0 ? void 0 : _a.checked;
        })
            .map(element => element.value);
        this.onChange.emit({
            value: this.value
        });
    }
    componentDidLoad() {
        const childList = this.el.querySelectorAll('taro-checkbox-core');
        childList.forEach((element) => {
            element.setAttribute('name', this.name || this.uniqueName);
        });
        Object.defineProperty(this.el, 'value', {
            get: () => this.value,
            configurable: true
        });
    }
    render() {
        return (h(Host, null));
    }
    static get is() { return "taro-checkbox-group-core"; }
    static get properties() { return {
        "name": {
            "type": "any",
            "mutable": false,
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "name",
            "reflect": false
        }
    }; }
    static get events() { return [{
            "method": "onChange",
            "name": "change",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get elementRef() { return "el"; }
    static get listeners() { return [{
            "name": "checkboxchange",
            "method": "function",
            "target": undefined,
            "capture": false,
            "passive": false
        }]; }
}
