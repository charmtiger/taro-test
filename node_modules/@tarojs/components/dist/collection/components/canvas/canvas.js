// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { h, Host } from "@stencil/core";
const LONG_TAP_DELAY = 500;
export class Canvas {
    constructor() {
        this.width = 300;
        this.height = 150;
        this.onTouchStart = () => {
            this.timer = setTimeout(() => {
                this.onLongTap.emit();
            }, LONG_TAP_DELAY);
        };
        this.onTouchMove = () => {
            clearTimeout(this.timer);
        };
        this.onTouchEnd = () => {
            clearTimeout(this.timer);
        };
    }
    componentDidLoad() {
        const { width, height } = this.el.getBoundingClientRect();
        this.width = width;
        this.height = height;
    }
    componentDidUpdate() {
        const { width, height } = this.el.getBoundingClientRect();
        if (this.width !== width)
            this.width = width;
        if (this.height !== height)
            this.height = height;
    }
    render() {
        const { canvasId, width, height } = this;
        return (h(Host, { class: 'taro-canvas' },
            h("canvas", { "canvas-id": canvasId, width: width, height: height, onTouchStart: this.onTouchStart, onTouchMove: this.onTouchMove, onTouchEnd: this.onTouchEnd })));
    }
    static get is() { return "taro-canvas-core"; }
    static get originalStyleUrls() { return {
        "$": ["./style/index.css"]
    }; }
    static get styleUrls() { return {
        "$": ["style/index.css"]
    }; }
    static get properties() { return {
        "type": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "type",
            "reflect": false
        },
        "canvasId": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "canvas-id",
            "reflect": false
        }
    }; }
    static get states() { return {
        "width": {},
        "height": {}
    }; }
    static get events() { return [{
            "method": "onLongTap",
            "name": "longtap",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get elementRef() { return "el"; }
}
