'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('./core-288f35a6.js');
const index = require('./index-00392f71.js');

const Button = class {
    constructor(hostRef) {
        core.registerInstance(this, hostRef);
        this.hoverClass = 'button-hover';
        this.type = 'default';
        this.hoverStartTime = 20;
        this.hoverStayTime = 70;
        this.loading = false;
        this.formType = null;
        this.hover = false;
        this.touch = false;
        this.onTouchStart = (e) => {
            // 取消 form 内 button 跳转
            e.preventDefault();
            this.touch = true;
            if (this.hoverClass && !this.disabled) {
                setTimeout(() => {
                    if (this.touch) {
                        this.hover = true;
                    }
                }, this.hoverStartTime);
            }
        };
        this.onTouchEnd = () => {
            this.touch = false;
            if (this.hoverClass && !this.disabled) {
                setTimeout(() => {
                    if (!this.touch) {
                        this.hover = false;
                    }
                }, this.hoverStayTime);
            }
            if (this.formType === 'submit') {
                this.onSubmit.emit();
            }
            else if (this.formType === 'reset') {
                this.onReset.emit();
            }
        };
        this.onSubmit = core.createEvent(this, "tarobuttonsubmit", 7);
        this.onReset = core.createEvent(this, "tarobuttonreset", 7);
    }
    render() {
        const { disabled, hoverClass, type, size, plain, loading, hover } = this;
        const cls = index.classNames('weui-btn', 'taro-button', {
            [`${hoverClass}`]: hover && !disabled,
            [`weui-btn_plain-${type}`]: plain,
            [`weui-btn_${type}`]: !plain && type,
            'weui-btn_mini': size === 'mini',
            'weui-btn_loading': loading,
            'weui-btn_disabled': disabled
        });
        return (core.h("button", { class: cls, type: type,
            // @ts-ignore: weui need plain for css selector
            plain: plain, disabled: disabled, onTouchStart: this.onTouchStart, onTouchEnd: this.onTouchEnd }, loading && core.h("i", { class: 'weui-loading' }), core.h("slot", null)));
    }
    static get style() { return "taro-button-core+taro-button-core button{margin-top:15px}button{position:relative;display:block;width:100%;margin-left:auto;margin-right:auto;padding-left:14px;padding-right:14px;-webkit-box-sizing:border-box;box-sizing:border-box;font-size:18px;text-align:center;text-decoration:none;line-height:2.55555556;border-radius:5px;-webkit-tap-highlight-color:transparent;overflow:hidden;color:#000;background-color:#f8f8f8}button[plain]{color:#353535;border:1px solid #353535;background-color:transparent}button[plain][disabled]{color:rgba(0,0,0,.3);border:1px solid rgba(0,0,0,.2);background-color:#f7f7f7}button[type=primary]{color:#fff;background-color:#1aad19}button[type=primary][plain]{color:#1aad19;border:1px solid #1aad19;background-color:transparent}button[type=primary][plain][disabled]{color:rgba(0,0,0,.3);border:1px solid rgba(0,0,0,.2);background-color:#f7f7f7}"; }
};

exports.taro_button_core = Button;
