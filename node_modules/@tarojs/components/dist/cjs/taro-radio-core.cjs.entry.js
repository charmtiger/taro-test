'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('./core-288f35a6.js');

const Radio = class {
    constructor(hostRef) {
        core.registerInstance(this, hostRef);
        this.value = '';
        this.checked = false;
        this.handleClick = () => {
            if (!this.checked)
                this.checked = true;
        };
        this.onChange = core.createEvent(this, "radiochange", 7);
    }
    watchChecked(newVal) {
        newVal && this.onChange.emit({ value: this.value });
    }
    watchId(newVal) {
        if (newVal)
            this.inputEl.setAttribute('id', newVal);
    }
    componentDidRender() {
        this.id && this.el.removeAttribute('id');
    }
    render() {
        const { checked, name, value } = this;
        return (core.h(core.Host, { className: 'weui-cells_checkbox', onClick: this.handleClick }, core.h("input", { ref: dom => {
                if (!dom)
                    return;
                this.inputEl = dom;
                if (this.id)
                    dom.setAttribute('id', this.id);
            }, type: 'radio', name: name, value: value, class: 'weui-check', checked: checked, onChange: e => e.stopPropagation() }), core.h("i", { class: 'weui-icon-checked' }), core.h("slot", null)));
    }
    get el() { return core.getElement(this); }
    static get watchers() { return {
        "checked": ["watchChecked"],
        "id": ["watchId"]
    }; }
};

exports.taro_radio_core = Radio;
