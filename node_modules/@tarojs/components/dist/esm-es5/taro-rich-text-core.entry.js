import { r as registerInstance, h, H as Host } from './core-42efd82a.js';
var RichText = /** @class */ (function () {
    function RichText(hostRef) {
        var _this = this;
        registerInstance(this, hostRef);
        this.renderNode = function (node) {
            if ('type' in node && node.type === 'text') {
                // unsupport Html Entries
                var content = (node.text || '').replace(/&nbsp;/g, '\u00A0');
                return content;
            }
            else if ('name' in node && node.name) {
                var name = node.name, attrs = node.attrs, children = node.children;
                var attributes = {};
                var childList = [];
                if (attrs && typeof attrs === 'object') {
                    for (var key in attrs) {
                        if (key === 'style' && typeof attrs[key] === 'string') {
                            // stencil JSX style props only support object
                            console.warn('[taro] attrs:style should be Object!');
                            continue;
                        }
                        attributes[key] = attrs[key];
                    }
                }
                if (children && children.length) {
                    childList = children.map(function (node) { return _this.renderNode(node); });
                }
                // @ts-ignore
                return h(name, attributes, childList);
            }
            return null;
        };
    }
    RichText.prototype.render = function () {
        var _a = this, nodes = _a.nodes, renderNode = _a.renderNode;
        if (Array.isArray(nodes)) {
            return (h(Host, null, nodes.map(function (node) { return renderNode(node); })));
        }
        else {
            return h(Host, { innerHTML: nodes });
        }
    };
    return RichText;
}());
export { RichText as taro_rich_text_core };
