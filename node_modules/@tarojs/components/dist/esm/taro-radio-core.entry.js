import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-42efd82a.js';

const Radio = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.value = '';
        this.checked = false;
        this.handleClick = () => {
            if (!this.checked)
                this.checked = true;
        };
        this.onChange = createEvent(this, "radiochange", 7);
    }
    watchChecked(newVal) {
        newVal && this.onChange.emit({ value: this.value });
    }
    watchId(newVal) {
        if (newVal)
            this.inputEl.setAttribute('id', newVal);
    }
    componentDidRender() {
        this.id && this.el.removeAttribute('id');
    }
    render() {
        const { checked, name, value } = this;
        return (h(Host, { className: 'weui-cells_checkbox', onClick: this.handleClick }, h("input", { ref: dom => {
                if (!dom)
                    return;
                this.inputEl = dom;
                if (this.id)
                    dom.setAttribute('id', this.id);
            }, type: 'radio', name: name, value: value, class: 'weui-check', checked: checked, onChange: e => e.stopPropagation() }), h("i", { class: 'weui-icon-checked' }), h("slot", null)));
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "checked": ["watchChecked"],
        "id": ["watchId"]
    }; }
};

export { Radio as taro_radio_core };
