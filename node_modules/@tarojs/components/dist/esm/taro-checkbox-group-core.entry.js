import { r as registerInstance, c as createEvent, h, g as getElement, H as Host } from './core-42efd82a.js';

const CheckboxGroup = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.uniqueName = Date.now().toString(36);
        this.value = [];
        this.onChange = createEvent(this, "change", 7);
    }
    function(e) {
        e.stopPropagation();
        if (e.target.tagName !== 'TARO-CHECKBOX')
            return;
        const childList = this.el.querySelectorAll('taro-checkbox-core');
        this.value = Array.from(childList)
            .filter(element => {
            var _a;
            const checkbox = element.querySelector(`input[name=${this.name || this.uniqueName}]`);
            return (_a = checkbox) === null || _a === void 0 ? void 0 : _a.checked;
        })
            .map(element => element.value);
        this.onChange.emit({
            value: this.value
        });
    }
    componentDidLoad() {
        const childList = this.el.querySelectorAll('taro-checkbox-core');
        childList.forEach((element) => {
            element.setAttribute('name', this.name || this.uniqueName);
        });
        Object.defineProperty(this.el, 'value', {
            get: () => this.value,
            configurable: true
        });
    }
    render() {
        return (h(Host, null));
    }
    get el() { return getElement(this); }
};

export { CheckboxGroup as taro_checkbox_group_core };
